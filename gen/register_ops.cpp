#include "lang/sema/sema_ctx.h"
void register_operators(sema_ctx& ctx)
{
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ADD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_AND_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_AND, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::BOOL), ctx.langtype(primitive_type::BOOL), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_DIV, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_EQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_GREATER, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LOGICAL_AND, ctx.langtype(primitive_type::BOOL), ctx.langtype(primitive_type::BOOL), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LOGICAL_OR, ctx.langtype(primitive_type::BOOL), ctx.langtype(primitive_type::BOOL), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_LESS, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MOD, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_MUL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_NEQ, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::BOOL));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_OR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_OR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHL, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SHR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_SUB, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_XOR_ASSIGN, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_SIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX), ctx.langtype(primitive_type::INTEGRAL_MAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B16), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B32), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B64));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UNSIGNED_B8), ctx.langtype(primitive_type::INTEGRAL_UMAX));
ctx.add_binary_operator(OP_BITWISE_XOR, ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX), ctx.langtype(primitive_type::INTEGRAL_UMAX));
}
