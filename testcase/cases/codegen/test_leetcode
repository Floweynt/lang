fn success(var v : int)->int;
fn error(var v : int)->int;
fn put_prompt()->int;

fn findkthnumber(var m: int32, var n: int32, var k: int32) -> int64
{
    var l : int64 = 1i64;
    var r : int64 = 1i64 * m * n;
    var x : int64 = 1i64;
    var y : int64 = 1i64;
    var max : int64 = 1i64;

    while (l < r)
    {
        var sum : int64 = 0i64;
        var mid = (l + r) / 2;
        max = 1i64;
        var i = 1;

        while (i <= m)
        {
            i = i + 1;

            x = mid / i;
            if (x > n)
                x = 1i64 * n;
            sum += x;
            if (i * x > max)
                max = i * x;
            if (sum > k)
                i = m + 1; // break;
        }

        if (sum > k)
            r = mid;
        if (sum < k)
            l = mid + 1;
        if (sum == k)
        {
            l = r = mid;
            // break;
        }
    }

    max = 1i64;
    var i = 1;
    
    while (i <= m)
    {
        i = i + 1;

        x = l / i;
        if (x > n)
            x = 1i64 * n;
        if (i * x > max)
            max = i * x;
    }

    return (max);
}

fn testcase(var i : int32, var m : int32, var n : int32, var k : int32, var ex : int32)
{
    if (findkthnumber(m, n, k) == ex)
        success(i);
    else
        error(i);
}

fn main()
{
    testcase(0, 3, 3, 5, 3);
    testcase(1, 2, 3, 6, 6);
}
