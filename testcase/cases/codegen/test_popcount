fn success(var v: int) -> int;
fn error(var v: int) -> int;
fn put_prompt() -> int;
fn builtin_popcount(var v: uint32) -> uint32;

fn bitcount(var n: uint32) -> uint32
{
    n = (n & 0x55555555u) + ((n >> 1u) & 0x55555555u);
    n = (n & 0x33333333u) + ((n >> 2u) & 0x33333333u);
    n = (n & 0x0f0f0f0fu) + ((n >> 4u) & 0x0f0f0f0fu);
    n = (n & 0x00ff00ffu) + ((n >> 8u) & 0x00ff00ffu);
    n = (n & 0x0000ffffu) + ((n >> 16u) & 0x0000ffffu);
    return (n);
}

fn testcase(var v: uint32, var i: int)
{
    if ( bitcount(v) == builtin_popcount(v))
        success(i);
    else
        error(i);
}

fn main()
{
    testcase(0x1234567u, 0);
    testcase(0x12345678u, 1);
    testcase(0x55aa55aau, 2);
    testcase(0xffffffffu, 3);
    testcase(0x00000000u, 4);
    testcase(0xdeaddeadu, 5);
    testcase(0xabcedf00u, 6);
}
